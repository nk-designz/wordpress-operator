apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "wordpress.netzlink.com/v1alpha1",
          "kind": "Wordpress",
          "metadata": {
            "name": "example-wordpress"
          },
          "spec": {
            "affinity": {},
            "allowEmptyPassword": true,
            "allowOverrideNone": false,
            "customHTAccessCM": null,
            "externalDatabase": {
              "database": "bitnami_wordpress",
              "host": "localhost",
              "password": "",
              "port": 3306,
              "user": "bn_wordpress"
            },
            "extraEnv": [],
            "extraVolumeMounts": [],
            "extraVolumes": [],
            "healthcheckHttps": false,
            "image": {
              "debug": false,
              "pullPolicy": "IfNotPresent",
              "registry": "docker.io",
              "repository": "bitnami/wordpress",
              "tag": "5.3.2-debian-10-r43"
            },
            "ingress": {
              "annotations": {},
              "certManager": false,
              "enabled": false,
              "hostname": "wordpress.local",
              "secrets": []
            },
            "livenessProbe": {
              "enabled": true,
              "failureThreshold": 6,
              "initialDelaySeconds": 120,
              "periodSeconds": 10,
              "successThreshold": 1,
              "timeoutSeconds": 5
            },
            "livenessProbeHeaders": {},
            "mariadb": {
              "db": {
                "name": "bitnami_wordpress",
                "user": "bn_wordpress"
              },
              "enabled": true,
              "master": {
                "persistence": {
                  "accessModes": [
                    "ReadWriteOnce"
                  ],
                  "enabled": true,
                  "size": "8Gi"
                }
              },
              "replication": {
                "enabled": false
              }
            },
            "metrics": {
              "enabled": false,
              "image": {
                "pullPolicy": "IfNotPresent",
                "registry": "docker.io",
                "repository": "bitnami/apache-exporter",
                "tag": "0.7.0-debian-10-r44"
              },
              "podAnnotations": {
                "prometheus.io/port": "9117",
                "prometheus.io/scrape": "true"
              },
              "resources": {
                "limits": {},
                "requests": {}
              },
              "serviceMonitor": {
                "additionalLabels": {},
                "enabled": false,
                "honorLabels": false,
                "interval": "30s"
              }
            },
            "nodeSelector": {},
            "persistence": {
              "accessMode": "ReadWriteOnce",
              "enabled": true,
              "size": "10Gi"
            },
            "podAnnotations": {},
            "readinessProbe": {
              "enabled": true,
              "failureThreshold": 6,
              "initialDelaySeconds": 30,
              "periodSeconds": 10,
              "successThreshold": 1,
              "timeoutSeconds": 5
            },
            "readinessProbeHeaders": {},
            "replicaCount": 1,
            "resources": {
              "limits": {},
              "requests": {
                "cpu": "300m",
                "memory": "512Mi"
              }
            },
            "securityContext": {
              "enabled": true,
              "fsGroup": 1001,
              "runAsUser": 1001
            },
            "service": {
              "annotations": {},
              "externalTrafficPolicy": "Cluster",
              "httpsPort": 443,
              "httpsTargetPort": "https",
              "loadBalancerSourceRanges": [],
              "metricsPort": 9117,
              "nodePorts": {
                "http": "",
                "https": "",
                "metrics": ""
              },
              "port": 80,
              "type": "LoadBalancer"
            },
            "sidecars": {},
            "tolerations": {},
            "updateStrategy": {
              "type": "RollingUpdate"
            },
            "wordpressBlogName": "User's Blog!",
            "wordpressEmail": "user@example.com",
            "wordpressFirstName": "FirstName",
            "wordpressLastName": "LastName",
            "wordpressScheme": "http",
            "wordpressSkipInstall": false,
            "wordpressTablePrefix": "wp_",
            "wordpressUsername": "user"
          }
        }
      ]
    capabilities: Basic Install
  name: wordpress-operator.v0.0.1-alpha
  namespace: wordpress
spec:
  apiservicedefinitions: {}
  customresourcedefinitions: {}
  description: Placeholder description
  displayName: Wordpress Operator
  install:
    spec:
      deployments:
      - name: wordpress-operator
        spec:
          replicas: 1
          selector:
            matchLabels:
              name: wordpress-operator
          strategy: {}
          template:
            metadata:
              labels:
                name: wordpress-operator
            spec:
              containers:
              - env:
                - name: WATCH_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.annotations['olm.targetNamespaces']
                - name: POD_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                - name: OPERATOR_NAME
                  value: wordpress-operator
                image: nicokahlert/wordpress-operator:0.1-alpha
                imagePullPolicy: Always
                name: wordpress-operator
                resources: {}
              serviceAccountName: wordpress-operator
      permissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - namespaces
          verbs:
          - get
        - apiGroups:
          - ""
          resources:
          - configmaps
          - secrets
          verbs:
          - '*'
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
        - apiGroups:
          - ""
          resources:
          - configmaps
          - persistentvolumeclaims
          - secrets
          - services
          verbs:
          - '*'
        - apiGroups:
          - apps
          resources:
          - deployments
          - statefulsets
          verbs:
          - '*'
        - apiGroups:
          - monitoring.coreos.com
          resources:
          - servicemonitors
          verbs:
          - get
          - create
        - apiGroups:
          - apps
          resourceNames:
          - wordpress-operator
          resources:
          - deployments/finalizers
          verbs:
          - update
        - apiGroups:
          - ""
          resources:
          - pods
          verbs:
          - get
        - apiGroups:
          - apps
          resources:
          - replicasets
          - deployments
          verbs:
          - get
        - apiGroups:
          - wordpress.netzlink.com
          resources:
          - '*'
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        serviceAccountName: wordpress-operator
    strategy: deployment
  installModes:
  - supported: true
    type: OwnNamespace
  - supported: true
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  maturity: alpha
  maintainers:
  - { "netzlink.com" }
  keywords:
  - wordpress
  - mariadb
  - operator
  - website
  - cms
  - database
  - helm
  - bitnami
  - operator-framework
  - redhat
  - openshift
  provider: {}
  replaces: wordpress-operator.v0.0.0
  version: 0.0.1-alpha
